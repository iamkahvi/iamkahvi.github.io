{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","description","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","map","edge","node","previous","frontmatter","fields","slug","previousPost","currYear","date","split","pop","yearHeader","key","className","gatsby__WEBPACK_IMPORTED_MODULE_3__","style","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","Layout","header","_this$props","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-1db857451ad85c873917.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogIndex extends React.Component {\n\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const description = data.site.siteMetadata.description\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} description={description}>\n      <SEO title={siteTitle} />\n      \n      {posts.map(edge => {\n        const { node, previous } = edge\n        const title = node.frontmatter.title || node.fields.slug\n        const previousPost = previous ? previous : node\n        const currYear = node.frontmatter.date.split(\" \").pop()\n        const previousYear = previousPost.frontmatter.date.split(\" \").pop()\n        const yearHeader = currYear !== previousYear ? true : false\n\n        return (\n          <div key={node.fields.slug}>\n            {yearHeader && <h1 className=\"helvetica f4 fw4 tc faded-blue mb4\">{currYear}</h1>}\n            <h3 className=\"mt0 mb2 pt3 bt b--light-gray\">\n              <Link style={{ boxShadow: `none` }} className=\"alink helvetica faded-orange\" to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small className=\"f6 helvetica faded-blue tr\">{node.frontmatter.date}</small>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: node.frontmatter.description || node.excerpt,\n              }}\n              className=\"f6 helvetica faded-blue\"\n              />\n          </div>\n        )\n      })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        previous {\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n          }\n        }\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children, description } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header\n    \n    if (location.pathname === rootPath) {\n      header = (\n        <div className=\"pt3\">\n          <p>\n            <Link to={'/home'} style={{ boxShadow: \"none\" }} className=\"alink helvetica faded-orange mh2\">Home</Link> / \n            <Link to={'/book-list'} style={{ boxShadow: \"none\" }} className=\"alink helvetica faded-orange mh2\">Book List</Link> / \n            <Link to={'/about'} style={{ boxShadow: \"none\" }} className=\"alink helvetica faded-orange mh2\">About</Link>\n          </p>\n          <h1\n            className=\"mt3 mb0\"\n          >\n            <Link\n              style={{\n                boxShadow:`none`,\n              }}\n              className=\"f1 helvetica underline faded-orange\"\n              to={`/`}\n            > {title} </Link>\n          </h1>\n          <p\n            className=\"f6 helvetica pt0 mt2 faded-blue\"\n          > {description} </p>\n        </div>\n      )\n    } else {\n      header = (\n        <h3\n          className=\"f3 helvetica faded-orange\"\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div className=\"w-90 center\">\n        <header className=\"fl pa2 pt3\">{header}</header>\n        <main className=\"fl pa2\">{children}</main>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}