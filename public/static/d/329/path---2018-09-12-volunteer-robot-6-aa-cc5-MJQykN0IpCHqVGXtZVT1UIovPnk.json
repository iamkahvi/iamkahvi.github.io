{"data":{"site":{"siteMetadata":{"title":"kahvi's blog","author":"Kahvi Patel"}},"markdownRemark":{"id":"61fe281f-72cd-5e3f-800e-c86ebb5b3b47","excerpt":"Over the course of summer 2018, I forked and developed a volunteer scheduling database application. The README  I created builds on the forked repository’s…","html":"<p>Over the course of summer 2018, I forked and developed a volunteer scheduling database application. The <a href=\"https://github.com/iamkahvi/volunteers\">README </a> I created builds on the <a href=\"https://github.com/playasoft/volunteers\">forked repository’s README</a> and describes usage, features and installation of the application.</p>\n<p>This post exists to specify which features I developed alone.</p>\n<h2>Table of Content</h2>\n<ul>\n<li>\n<p><a href=\"#ui-design\">UI Design</a></p>\n<ul>\n<li>Dashboard</li>\n<li>Event Page</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#backend-features\">Backend Features</a></p>\n<ul>\n<li>Email Notifications</li>\n<li>Hide Empty Days Feature</li>\n<li>Filtering Users by Role for admins</li>\n<li>Change to Reminder timing through .ENV laravel doc</li>\n<li>Filter by week</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>UI Design</h2>\n<h3>Event Page</h3>\n<p>I added a legend to the Event page. I changed the text formatting to make the page more legible.\nI changed the date format to make the page more legible.</p>\n<p><img src=\"/assets/EventCompare.png\" alt=\"Compare Event\"></p>\n<h3>Dashboard</h3>\n<p>Using the bootstrap list items element, I made the dashboard more legible.</p>\n<p><img src=\"/assets/DashboardCompare.png\" alt=\"Compare Dashboard\"></p>\n<hr>\n<h2>Backend Features</h2>\n<h3>Email Notifications</h3>\n<p>On the advice of the original developer, my plan for developing the email notification feature was:</p>\n<ol>\n<li>Create a console command which loops through a table for any shifts starting within the next “hour”</li>\n<li>If a volunteer has signed up for that slot, send them a notification</li>\n<li>Add value to SQL table to prevent further notifications</li>\n<li>Add the command to the Laravel cron so it runs periodically (every 5 minutes? 15 minutes?)</li>\n</ol>\n<p>This approach was somewhat inefficient given the Laravel cron would be running continuously when it wouldn’t need to. Scheduling a task immediately when a user signs up instead of iterating through the table continuously would be a better approach. Ultimately I chose to implement the feature as a simple solution using the existing schema as opposed to changing the schema and the controller logic.</p>\n<p>To work through the logic of when to send reminders, I create variables for when the shift starts and when to remind the user for that specific\nshift. I do this by creating two <a href=\"https://carbon.nesbot.com/docs/\">Carbon</a> dates and add a user-designated amount of hours to the second variable.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">// Cycle through all the slots</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$shifts</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$shift</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token variable\">$startDate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Carbon</span><span class=\"token punctuation\">(</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strtotime</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">start_date</span></span> <span class=\"token interpolation\"><span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">start_time</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token variable\">$remindDate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Carbon</span><span class=\"token punctuation\">(</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strtotime</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">start_date</span></span> <span class=\"token interpolation\"><span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">start_time</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token variable\">$now</span> <span class=\"token operator\">=</span> Carbon<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token variable\">$remindDate</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">subHours</span><span class=\"token punctuation\">(</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'REMIND_HOURS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>I find the shift starting within the given reminder period using the variables.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$remindDate</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$now</span> <span class=\"token keyword\">and</span> <span class=\"token variable\">$startDate</span> <span class=\"token operator\">></span> <span class=\"token variable\">$now</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>Then, I cycle through all users to find who is registered for the shift in question.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$users</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Find user that is registered for this shift</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">id</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">user_id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span></code></pre></div>\n<p>Then I notify the user of the shift. I used the <a href=\"https://www.mailgun.com/email-api\">MailGun api</a> with <a href=\"https://laravel.com/docs/5.2/mail\">Laravel</a> to send the emails.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\t\t\t\n<span class=\"token comment\">// Notify user of upcoming shift</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">isNotified</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'No'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">shiftStarting</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$shift</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span></span></code></pre></div>\n<p>In order to prevent the user from getting continuously notified, I created a column in the shifts table to track notification status.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">// Update isNotified value in SQL database</span>\n<span class=\"token constant\">DB</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'slots'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$shift</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">id</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'isNotified'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'Yes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<br>\n<h3>Hide Empty Days Feature</h3>\n<p>The Volunteer Robot often displayed days on the event page which didn’t contain any shifts. This meant a lot of unecessary scrolling for users.</p>\n<p>My strategy was to cycle through each day that would be displayed on the event page and check if the day had a shift.\nFortunately, this check was relatively simple after looking into different SQL queries.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// Pluck all of the shift IDs for this event and check the if any in the schedule start today</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Schedule<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">whereIn</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'shift_id'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$shifts</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'dates'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'LIKE'</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"%\"</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$date</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Y-m-d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// Continue onto the next day</span>\n<span class=\"token variable\">$date</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<br>\n<h3>Filtering Users by Role for admins</h3>\n<p>The admins of the Volunteer Robot regularly send out mass emails to volunteers according to their “Role”. They wanted to filter the users by their Role in order to access email addresses more efficiently.   </p>\n<p>I wanted to work in plain javascript for this feature to familiarize myself. This feature was challenging because the Users, Roles, and User Roles are all located in seperate SQL tables. Thankfully, this issue was easy to deal with once I understood how to make SQL queries within blade.php files. I plucked each user’s roles from the User Role table and put it in a class attribute.</p>\n<p><img src=\"/assets/FilterUsersHTML.png\" alt=\"Filer Users HTML\"></p>\n<p>On the other end, my main concern was how to filter users with multiple roles. Since my query returned a string of text, there was no way to distinguish one role from another. I had to split the result of that query in javascript to make it an array of each role. Then it was much easier to find out if the specified user had that role in their respective array.  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.filter-user-roles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       \n        <span class=\"token comment\">// define the role</span>\n        <span class=\"token keyword\">var</span> role <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".filter-user-roles\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// define all the spans of the users</span>\n        <span class=\"token keyword\">var</span> users <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.email-block .user-block'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// hide all the users</span>\n        users<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            element<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>role <span class=\"token operator\">==</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            \n            <span class=\"token comment\">// show all users</span>\n            users<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                element<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"inline\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token comment\">// show user if they have that role</span>\n            users<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token keyword\">var</span> userRoles <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-role'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userRoles<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>role<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    user<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"inline\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<h3>Filter by week</h3>\n<p>Fortunately, there existed an implementation of a feature similar to this one in the application. This made it much easier to work this one out.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Hide all the days</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.days .day'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Convert date to Moment format</span>\n<span class=\"token keyword\">let</span> m <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nm <span class=\"token operator\">=</span> <span class=\"token function\">moment</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Show this one</span>\n\n<span class=\"token comment\">// Loop through seven days</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.days .day[data-date=\"'</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Y-MM-DD'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trigger</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'days'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The most challenging part of implementing this feature was installing the Moment package on the active server. Without this package, I wasn’t able to manipulate date strings easily.\nSince the server ran Ubuntu, the package wouldn’t install. After some Googling, one line of code in the header.blade.php solved all my problems.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/moment@2.22.2/moment.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br>","frontmatter":{"title":"Volunteer Robot","date":"September 12, 2018","description":"Overview of Implemented Features"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2018-09-12-Volunteer Robot/","previous":{"fields":{"slug":"/2018-09-10-position paper/"},"frontmatter":{"title":"position paper"}},"next":{"fields":{"slug":"/2018-11-22-shortcuts/"},"frontmatter":{"title":"shortcuts"}}}}